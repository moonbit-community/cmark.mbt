name: check

on:
  push:
    branches:
      - main
  pull_request:
  schedule:
    - cron: "30 0 * * 1" # Every Monday at half past midnight UTC

jobs:
  build:
    strategy:
      matrix:
        os:
          - name: ubuntu-latest
            path: ubuntu_x86_64_moon_setup
          - name: macos-13
            path: mac_intel_moon_setup
          - name: macos-latest
            path: mac_m1_moon_setup
          - name: windows-latest

    runs-on: ${{ matrix.os.name }}
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4

      - name: install
        if: ${{ matrix.os.name != 'windows-latest' }}
        run: |
          curl -fsSL https://cli.moonbitlang.com/install/unix.sh | bash -s -- pre-release
          echo "$HOME/.moon/bin" >> $GITHUB_PATH

      - name: install on windows
        env:
          MOONBIT_INSTALL_VERSION: pre-release
        if: ${{ matrix.os.name == 'windows-latest' }}
        run: |
          Set-ExecutionPolicy RemoteSigned -Scope CurrentUser; irm https://cli.moonbitlang.com/install/powershell.ps1 | iex
          "C:\Users\runneradmin\.moon\bin" | Out-File -FilePath $env:GITHUB_PATH -Append

      - name: moon version
        run: |
          moon version --all
          moonrun --version

      - name: moon check
        run: |
          moon update
          moon check --deny-warn

      - name: moon info and moon fmt
        run: |
          moon info
          moon fmt
          git diff --exit-code

      - name: moon test
        env:
          OCAMLRUNPARAM: b
        run: |
          moon test --target wasm
          moon test --target wasm --release
          moon test --target wasm-gc
          moon test --target wasm-gc --release
          # moon test --target js
          # moon test --target js --release

  coverage-check:
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4

      - name: install
        run: |
          curl -fsSL https://cli.moonbitlang.com/install/unix.sh | bash -s -- pre-release
          echo "$HOME/.moon/bin" >> $GITHUB_PATH

      - name: moon test
        run: |
          moon update
          moon test --enable-coverage

      - name: coverage report
        run: |
          moon coverage report -f summary > coverage_summary.txt
          # Put the coverage report in the pipline output
          cat coverage_summary.txt >> "$GITHUB_STEP_SUMMARY"
          # We don't use the official coveralls upload tool because it takes >1min to build itself
          moon coverage report \
            -f coveralls \
            -o codecov_report.json \
            --service-name github \
            --service-job-id "$GITHUB_RUN_NUMBER" \
            --service-pull-request "${{ github.event.number }}" \
            --send-to coveralls
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
